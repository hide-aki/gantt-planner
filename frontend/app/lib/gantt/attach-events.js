/*eslint no-console: ["error", { allow: ["log"] }] */

export default function ganttAttachEvents (context) {
    [
        "AfterBatchUpdate", // function(...)
        "AfterLightbox", // function(...)
        "AfterLinkAdd",  // function(id, task)
        "AfterLinkDelete", // function(...)
        "AfterLinkUpdate", // function(id, task)
        "AfterMessagePopup", // function()
        "AfterQuickInfo", // function()
        "AfterRedo", // function(...)
        "AfterTaskAdd", // function(id, task)
        "AfterTaskDelete", // function(id, task)
        "AfterTaskDrag", // function(id, task)
        "AfterTaskMove", // function(...)
        "AfterTaskUpdate", // function(id, task)
        "AfterUndo", // function(...)
        "AjaxError", // function(...)
        "BeforeBatchUpdate", // function(...)
        "BeforeCollapse", // function(...)
        "BeforeDataRender", // function(...)
        "BeforeDrag", // function()
        "BeforeExpand", // function(...)
        "BeforeGanttReady", // function(...)
        "BeforeGanttRender", // function(...)
        "BeforeLightbox", // function(...)
        "BeforeLinkAdd", // function(...)
        "BeforeLinkDelete", // function(...)
        "BeforeLinkDisplay", // function(...)
        "BeforeLinkUpdate", // function(...)
        "BeforeParse", // function(...)
        "BeforeRedo", // function(...)
        "BeforeRowDragEnd", // function(...)
        "BeforeTaskAdd", // function(...)
        "BeforeTaskAutoSchedule", // function(task)
        "BeforeTaskChanged", // function(id, mode, old_event)
        "BeforeTaskDelete", // function(id)
        // "BeforeTaskDisplay", // function(...)
        "BeforeTaskDrag", // function(id, mode)
        "BeforeTaskMove", // function(...)
        "BeforeTaskMultiSelect", // function(id, select, e)
        "BeforeTaskSelected", // function(...)
        "BeforeTaskUpdate", // function(...)
        "BeforeUndo", // function(...)
        "Clear", // function()
        "Collapse", // function(...)
        "ContextMenu", // function(...)
        "DataRender", // function()
        "EmptyClick", // function (e)
        "Error", // function(...)
        "EventDeleted", //  function()
        "Expand", // function(...)
        "GanttReady", // function(...)
        "GanttRender", // function()
        "GanttScroll", // function(oldLeft, oldTop, left, top)
        "GridHeaderClick", // function(...)
        "Lightbox", // function(...)
        "LightboxButton", // function(...)
        "LightboxCancel", // function(...)
        "LightboxChange", // function(...)
        "LightboxDelete", // function(...)
        "LightboxSave", // function(...)
        "LinkClick", // function(id)
        "LinkDblClick", // function(...)
        "LinkIdChange", // function(oldId, newId)
        "LinkValidation", // function(...)
        "LoadEnd", // function(...)
        "LoadStart", // function(...)
        // "MouseLeave", // function(ev)
        // "MouseMove", // function(event_id, ev)
        "OptionsLoad", // function(...)
        "Parse", // function()
        "QuickInfo", // function(...)
        "RowDragEnd", // function(...)
        "RowDragStart", // function(...)
        "ScaleAdjusted", // function(...)
        "ScaleClick", // function(...)
        "TaskClick", // function(id, e)
        "TaskClosed", // function(...)
        "TaskCreated", // function(...)
        "TaskDblClick", // function(id, e)
        "TaskDrag", // function(...)
        "TaskIdChange", // function(oldId, newId)
        "TaskLoading", // function(...)
        "TaskOpened", // function(...)
        "TaskRowClick", // function(...)
        "TaskSelected", // function(...)
        "TaskUnselected", // function(...)
        "TemplatesReady" // function(...)
    ].forEach(function(name){
        gantt.attachEvent("on"+name, function() { console.log('Gantt event: on' + name) });
    });

    gantt.attachEvent("onBeforeTaskDisplay", (id, task) => {
        let current_filter_status = context.get('current_filter_status');
        return (
            (current_filter_status === 'All') ||
            (current_filter_status === 'Pending' && task.progress === 0) ||
            (current_filter_status === 'Started' && task.progress > 0 && task.progress < 1) ||
            (current_filter_status === 'Completed' && task.progress === 1)
        );
    });
}
